{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Link from \"../../Link\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useRouter } from \"next/router\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: \"#F9FAFB\",\n    zIndex: theme.zIndex.modal + 1,\n    boxShadow: \"none\",\n    borderBottom: \"1px solid #cccccc\"\n  },\n  toolbar: {\n    minHeight: 70\n  },\n  brand: {\n    lineHeight: 1,\n    marginRight: \"auto\"\n  },\n  link: {\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\"\n    },\n    \"&:hover\": {\n      color: [theme.palette.primary.main],\n      textDecoration: \"none\"\n    }\n  },\n  linkSelected: {\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\"\n    },\n    color: [theme.palette.primary.main],\n    \"&:hover\": {\n      color: [theme.palette.primary.main],\n      textDecoration: \"none\"\n    }\n  },\n  primaryAction: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  menuButton: {\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  },\n  iconWrapper: {\n    minWidth: 40\n  },\n  icon: {\n    color: theme.palette.text.hint\n  },\n  drawerContainer: {\n    paddingTop: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(3),\n    width: 240\n  },\n  listItem: {\n    backgroundColor: \"#FFFFFF\",\n    boxShadow: \"none\",\n    borderRadius: 10\n  }\n}));\nexport default function Navigation({\n  tabValue,\n  setTabValue\n}) {\n  const classes = useStyles();\n  const router = useRouter();\n  const content = {\n    brand: {\n      image: \"/assets/vector/default-monochrome.svg\",\n      width: 220\n    },\n    link1: \"Home\",\n    link2: \"About\",\n    link3: \"Services\",\n    link4: \"Contact Us\"\n  };\n  let brand;\n\n  if (content.brand.image) {\n    brand = /*#__PURE__*/_jsx(\"img\", {\n      src: content.brand.image,\n      alt: \"\",\n      width: content.brand.width\n    });\n  } else {\n    brand = content.brand.text || \"\";\n  }\n\n  const [state, setState] = React.useState({\n    open: false\n  });\n\n  const toggleDrawer = open => event => {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      open\n    }));\n  };\n\n  useEffect(() => {\n    if (router.pathname === \"/\" && tabValue !== 0) {\n      setTabValue(0);\n    } else if (router.pathname === \"/about\" && tabValue !== 1) {\n      setTabValue(1);\n    } else if (router.pathname === \"/services\" && tabValue !== 2) {\n      setTabValue(2);\n    } else if (router.pathname === \"/contact\" && tabValue !== 3) {\n      setTabValue(3);\n    }\n  }, [setTabValue, tabValue, router.pathname]);\n  return /*#__PURE__*/_jsxs(AppBar, {\n    position: \"static\",\n    color: \"inherit\",\n    className: classes.appBar,\n    children: [/*#__PURE__*/_jsxs(Toolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(Link, {\n        href: \"/\",\n        color: \"primary\",\n        underline: \"none\",\n        variant: \"h5\",\n        className: classes.brand,\n        children: brand\n      }), /*#__PURE__*/_jsx(Link, {\n        href: \"/\",\n        color: \"textPrimary\",\n        variant: \"body2\",\n        className: tabValue === 0 ? classes.linkSelected : classes.link,\n        children: content[\"link1\"]\n      }), /*#__PURE__*/_jsx(Link, {\n        href: \"/about\",\n        color: \"textPrimary\",\n        variant: \"body2\",\n        className: tabValue === 1 ? classes.linkSelected : classes.link,\n        children: content[\"link2\"]\n      }), /*#__PURE__*/_jsx(Link, {\n        href: \"/services\",\n        color: \"textPrimary\",\n        variant: \"body2\",\n        className: tabValue === 2 ? classes.linkSelected : classes.link,\n        children: content[\"link3\"]\n      }), /*#__PURE__*/_jsx(Link, {\n        href: \"/contact\",\n        color: \"textPrimary\",\n        variant: \"body2\",\n        className: tabValue === 3 ? classes.linkSelected : classes.link,\n        children: content[\"link4\"]\n      }), /*#__PURE__*/_jsx(IconButton, {\n        edge: \"start\",\n        color: \"inherit\",\n        \"aria-label\": \"menu\",\n        className: classes.menuButton,\n        onClick: toggleDrawer(!state.open),\n        children: /*#__PURE__*/_jsx(MenuIcon, {})\n      })]\n    }), /*#__PURE__*/_jsx(Drawer, {\n      anchor: \"left\",\n      open: state.open,\n      onClose: toggleDrawer(false),\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: classes.drawerContainer,\n        children: [/*#__PURE__*/_jsx(Box, {\n          mb: 1,\n          ml: 2,\n          pb: 2,\n          border: 1,\n          borderTop: 0,\n          borderLeft: 0,\n          borderRight: 0,\n          borderColor: \"#000000\",\n          children: /*#__PURE__*/_jsx(Link, {\n            href: \"/\",\n            color: \"primary\",\n            underline: \"none\",\n            variant: \"h5\",\n            className: classes.linkBrand,\n            children: brand\n          })\n        }), /*#__PURE__*/_jsxs(List, {\n          children: [/*#__PURE__*/_jsx(ListItem, {\n            className: classes.listItem,\n            button: true,\n            selected: tabValue === 0,\n            component: Link,\n            href: \"/\",\n            onClick: () => setState({\n              open: !state.open\n            }),\n            children: /*#__PURE__*/_jsx(ListItemText, {\n              primary: content[\"link1\"]\n            })\n          }, content[\"link1\"]), /*#__PURE__*/_jsx(ListItem, {\n            className: classes.listItem,\n            button: true,\n            selected: tabValue === 1,\n            component: Link,\n            href: \"/about\",\n            onClick: () => setState({\n              open: !state.open\n            }),\n            children: /*#__PURE__*/_jsx(ListItemText, {\n              primary: content[\"link2\"]\n            })\n          }, content[\"link2\"]), /*#__PURE__*/_jsx(ListItem, {\n            className: classes.listItem,\n            button: true,\n            selected: tabValue === 2,\n            component: Link,\n            href: \"/services\",\n            onClick: () => setState({\n              open: !state.open\n            }),\n            children: /*#__PURE__*/_jsx(ListItemText, {\n              primary: content[\"link3\"]\n            })\n          }, content[\"link3\"]), /*#__PURE__*/_jsx(ListItem, {\n            className: classes.listItem,\n            button: true,\n            selected: tabValue === 3,\n            component: Link,\n            href: \"/contact\",\n            onClick: () => setState({\n              open: !state.open\n            }),\n            children: /*#__PURE__*/_jsx(ListItemText, {\n              primary: content[\"link4\"]\n            })\n          }, content[\"link4\"])]\n        })]\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}